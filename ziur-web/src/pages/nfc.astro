---
import Layout from '../layouts/Layout.astro';
---
<Layout title="NFC Irakurlea">
    <main>
        <div class="logo-container">
            <img src="/logo-ziur.png" alt="ZIUR Logo" class="custom-logo" width="200" height="200" />
        </div>
        <h1>NFC <span class="text-gradient">Irakurlea</span></h1>
        <button id="startScan" class="scan-button">Hasi eskaneatzea</button>
        <div class="instructions" id="status">
            Sakatu botoia NFC irakurketa hasteko
        </div>
        <div class="address-display" id="addressDisplay"></div>
    </main>
</Layout>

<style>
    /* Previous styles remain unchanged */
</style>

<script>
    interface NFDReading {
        message: {
            records: {
                recordType: string;
                data: ArrayBuffer;
            }[];
        };
    }
    interface NFDError extends Error {
        name: string;
    }
    declare class NDEFReader {
        constructor();
        scan(): Promise<void>;
        addEventListener(type: string, callback: (reading: NFDReading) => void): void;
    }

    const startButton = document.getElementById('startScan');
    const statusElement = document.getElementById('status');
    const addressDisplay = document.getElementById('addressDisplay');

    function extractEthereumAddress(url: string): string | null {
        const match = url.match(/^ethereum:\/\/([a-fA-F0-9x]{42})$/);
        return match ? match[1] : null;
    }

    async function startNFCReader() {
        if (!statusElement || !addressDisplay) return;

        try {
            if ('NDEFReader' in window) {
                const ndef = new NDEFReader();
                await ndef.scan();
                statusElement.textContent = 'NFC prest - Ukitu txartela';
                
                ndef.addEventListener('reading', (reading: NFDReading) => {
                    for (const record of reading.message.records) {
                        if (record.recordType === "url") {
                            const textDecoder = new TextDecoder();
                            const url = textDecoder.decode(record.data);
                            const address = extractEthereumAddress(url);
                            
                            if (address) {
                                addressDisplay.textContent = address;
                                statusElement.textContent = 'Ethereum helbidea aurkitu da';
                            } else {
                                statusElement.textContent = 'NFC txartelak ez du Ethereum helbide baliogarririk';
                            }
                        }
                    }
                });
            } else {
                statusElement.textContent = 'Gailu honek ez du NFC euskarririk';
            }
        } catch (error) {
            const nfcError = error as NFDError;
            if (nfcError.name === 'NotAllowedError') {
                statusElement.textContent = 'Mesedez, eman NFC baimena';
            } else if (nfcError.name === 'NotSupportedError') {
                statusElement.textContent = 'NFCa ez dago erabilgarri edo desgaituta dago';
            } else {
                statusElement.textContent = 'Errorea: ' + nfcError.message;
            }
        }
    }

    startButton?.addEventListener('click', startNFCReader);

    document.addEventListener('visibilitychange', () => {
        if (!document.hidden) {
            statusElement!.textContent = 'Sakatu botoia NFC irakurketa hasteko';
        }
    });
</script>