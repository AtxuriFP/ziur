---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Mint Your Certificate">
	<main>
		<div class="top-bar">
			<a href="/" class="home-button">Back to Home</a>
			<div class="logo-container">
				<img
					src="/logo-ziur.png"
					alt="ZIUR Logo"
					class="ziur-logo"
					width="100"
					height="100"
				/>
			</div>
		</div>

		<h1>Mint Your <span class="text-gradient">Certificate</span></h1>
		
		<p class="instructions">
			Enter your minting details to receive your course completion certificate as an NFT.
		</p>

		<section class="minting-form">
			<h2>Enter Minting Details</h2>
			<form id="mintingForm">
				<label for="studentAddress">Your Ethereum Address:</label>
				<input type="text" id="studentAddress" name="studentAddress" required>

				<label for="courseId">Course ID:</label>
				<input type="number" id="courseId" name="courseId" required>

				<label for="signature">Signature:</label>
				<input type="text" id="signature" name="signature" required>

				<button type="submit">Mint Certificate</button>
			</form>
			<div id="mintingResult" class="minting-result"></div>
		</section>

		<section class="instructions-list">
			<h2>Instructions</h2>
			<ol>
				<li>Enter your Ethereum address (the one you provided to your course administrator).</li>
				<li>Enter the Course ID provided by your administrator.</li>
				<li>Paste the signature provided by your course administrator.</li>
				<li>Click "Mint Certificate" to receive your certificate as an NFT.</li>
			</ol>
			<p class="note">Note: Ensure you're connected to the correct network in your Web3 wallet (e.g., MetaMask) before minting.</p>
		</section>
	</main>
</Layout>

<script>
	import CourseCertificationService from '../../lib/CourseCertificationService';

	async function mintCertificate(studentAddress: string, courseId: number, signature: string) {
		try {
			await CourseCertificationService.mintCertificate(studentAddress, courseId, signature);
			const resultElement = document.getElementById('mintingResult');
			if (resultElement) {
				resultElement.innerHTML = `
					<h3>Certificate Minted Successfully!</h3>
					<p>Congratulations! Your certificate for Course ID ${courseId} has been minted to your address: ${studentAddress}</p>
				`;
			}
		} catch (error: unknown) {
			console.error('Error minting certificate:', error);
			const resultElement = document.getElementById('mintingResult');
			if (resultElement) {
				resultElement.innerHTML = `
					<h3>Error Minting Certificate</h3>
					<p>An error occurred while minting your certificate. Please try again or contact support.</p>
					<p>Error details: ${error instanceof Error ? error.message : 'Unknown error'}</p>
				`;
			}
		}
	}

	// Minting Form Submission
	const mintingForm = document.getElementById('mintingForm') as HTMLFormElement;
	mintingForm?.addEventListener('submit', async (e: Event) => {
		e.preventDefault();
		const formData = new FormData(e.target as HTMLFormElement);
		const studentAddress = formData.get('studentAddress') as string;
		const courseId = parseInt(formData.get('courseId') as string);
		const signature = formData.get('signature') as string;
		
		await mintCertificate(studentAddress, courseId, signature);
	});

	// Check if Web3 is available and on the correct network
	document.addEventListener('DOMContentLoaded', async () => {
		try {
			await CourseCertificationService.init();
			console.log('Web3 initialized successfully');
		} catch (error: unknown) {
			console.error('Failed to initialize Web3:', error);
			alert('Please make sure you have a Web3 wallet installed and you\'re connected to the correct network.');
		}
	});
</script>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.top-bar {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 2rem;
	}
	.home-button {
		background-color: rgba(var(--accent-light), 12%);
		color: white;
		text-decoration: none;
		padding: 0.5em 1em;
		border-radius: 4px;
		transition: background-color 0.3s ease, color 0.3s ease;
		border: 1px solid rgba(var(--accent-light), 25%);
	}
	.home-button:hover {
		background-color: rgba(var(--accent-light), 30%);
		color: rgba(var(--accent-light), 100%);
	}
	.logo-container {
		display: flex;
		justify-content: center;
		align-items: center;
	}
	.ziur-logo {
		max-width: 100%;
		height: auto;
	}
	h1 {
		font-size: 3rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
		text-align: center;
	}
	section {
		margin-bottom: 2em;
		background: rgba(var(--accent-light), 12%);
		border: 1px solid rgba(var(--accent-light), 25%);
		border-radius: 8px;
		padding: 1.5rem;
	}
	form {
		display: flex;
		flex-direction: column;
		gap: 1em;
	}
	input {
		padding: 0.5em;
		border-radius: 4px;
		border: 1px solid rgba(var(--accent-light), 25%);
		background-color: rgba(var(--accent-dark), 33%);
		color: white;
	}
	button {
		background-color: rgba(var(--accent-light), 12%);
		color: white;
		text-decoration: none;
		padding: 0.5em 1em;
		border-radius: 4px;
		transition: background-color 0.3s ease, color 0.3s ease;
		border: 1px solid rgba(var(--accent-light), 25%);
	}
	button:hover {
		background-color: rgba(var(--accent-light), 30%);
		color: rgba(var(--accent-light), 100%);
	}
	.minting-result {
		margin-top: 1em;
		padding: 1em;
		background: rgba(var(--accent-light), 20%);
		border-radius: 4px;
	}
	.instructions-list {
		background: rgba(var(--accent-light), 15%);
	}
	ol {
		padding-left: 1.5em;
		margin-bottom: 1em;
	}
	li {
		margin-bottom: 0.5em;
	}
	.note {
		font-style: italic;
		background: rgba(var(--accent-light), 20%);
		padding: 0.5em;
		border-radius: 4px;
	}
</style>